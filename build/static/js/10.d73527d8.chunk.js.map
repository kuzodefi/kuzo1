{"version":3,"sources":["views/Pools/components/Card.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Coming.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/Balance.tsx","components/Tags.tsx","hooks/useStake.ts","config/index.ts","components/layout/Flex.tsx","hooks/useApprove.ts","hooks/useUnstake.ts","hooks/useBlock.ts","components/Label/Label.tsx"],"names":["Card","styled","div","theme","card","background","boxShadow","radii","isFinished","colors","isActive","CardTitle","Balance","text","Label","textSubtle","DetailPlaceholder","Value","Footer","isDark","Coming","TranslateString","useI18n","style","padding","role","src","width","height","alt","variant","as","href","external","mb","flex","DepositModal","max","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","value","handleSelectMax","title","TokenInput","onSelectMax","onChange","symbol","ModalActions","onClick","disabled","a","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","id","Title","ActionLink","OldSyrupTitle","hasBalance","target","StyledButton","button","props","fontSize","size","undefined","StyledLink","Link","spacing","StyledExternalLink","Button","buttonSize","buttonPadding","children","to","useContext","ThemeContext","buttonColor","ButtonChild","color","tags","PoolCategory","BINANCE","BinanceTag","CORE","CoreTag","COMMUNITY","CommunityTag","StyledFooter","StyledDetailsButton","primary","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","marginBottom","isDisabled","getBalanceNumber","decimals","React","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","sousId","image","stakingTokenName","stakingTokenAddress","harvest","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","useERC20","account","useWallet","block","useBlock","onApprove","useSousApprove","onStake","useSousStake","onUnstake","useSousUnstake","onReward","useSousHarvest","requestedApproval","setRequestedApproval","allowance","BigNumber","stakingTokenBalance","stakedBalance","pendingReward","Math","isOldSyrup","QuoteToken","SYRUP","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","pow","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","console","error","display","alignItems","HarvestButton","UnlockButton","eq","isNaN","isFinite","unit","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","Hero","Farm","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","map","rewardTokenFarm","find","f","tokenSymbol","stakingTokenFarm","s","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","BUSD","priceToBnb","quoteTokenSymbol","times","tokenPerBlock","BLOCKS_PER_YEAR","totalStakingTokenInPool","partition","finishedPools","openPools","Page","Divider","Flex","exact","orderBy","StyledSpacer","Spacer","StyledModalActions","primaryDark","StyledModalAction","l","Children","toArray","length","child","i","StyledInputWrapper","input","default","StyledInput","Input","endAdornment","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","depositFeeBP","toLocaleString","toString","StyledText","Text","textDisabled","previousValue","useRef","useEffect","current","bold","start","end","duration","separator","defaultProps","NoFeeTag","outline","startIcon","ExchangeTag","exchange","isUsingBnb","dispatch","useDispatch","masterChefContract","useMasterchef","sousChefContract","useSousChef","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","useStake","pid","txHash","fetchFarmUserDataAsync","info","config","EXPONENTIAL_AT","DECIMAL_PLACES","FlexLayout","useApprove","lpContract","approve","tx","updateUserAllowance","SYRUPIDS","includes","unstake","sousEmegencyUnstake","sousUnstake","updateUserPendingReward","useUnstake","BlockContext","StyledLabel"],"mappings":"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","file":"static/js/10.d73527d8.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${({ theme }) => theme.card.background};\n  border: ${({ theme }) => theme.card.boxShadow};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: ${({ theme }) => theme.radii.card};\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Image, Button } from '@pancakeswap-libs/uikit'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport Card from './Card'\nimport CardTitle from './CardTitle'\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#1A152C' : '#E9EAEB')};\n  padding: 24px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <div style={{ padding: '24px' }}>\n        <CardTitle>\n          {TranslateString(414, 'Your Project?')}{' '}\n          <span role=\"img\" aria-label=\"eyes\">\n            👀\n          </span>\n        </CardTitle>\n        <Image src=\"/images/egg/pbank.png\" width={64} height={64} alt=\"Your project here\" />\n        <Balance>???</Balance>\n        <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\n        <Button\n          variant=\"secondary\"\n          as=\"a\"\n          href=\"https://t.me/ProcyonSwapDev\"\n          external\n          \n          mb=\"16px\"\n        >\n          {TranslateString(418, 'Apply Now')}\n        </Button>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          <Value>??</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label=\"syrup\">\n              {' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Value>??? KUZO</Value>\n        </DetailPlaceholder>\n      </div>\n      <Footer>\n        <CommunityTag />\n      </Footer>\n    </Card>\n  )\n}\n\nexport default Coming\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max,6)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button  variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          \n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button  variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          \n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  🥞{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} >\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'SYRUP Pool')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake KUZO to earn new tokens.')}</li>\n            <li>{TranslateString(404, 'You can unstake at any time.')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n        </div>\n        <img src=\"/images/egg/syrup.png\" alt=\"SYRUP POOL icon\" width={410} height={191} />\n      </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n            <Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {\n        depositFeeBP > 0 ?\n          <StyledMaxText>\n            {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\n          </StyledMaxText>\n          :\n          null\n      }\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant='secondary' outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst ExchangeTag = ({exchange}) => (\n  <Tag variant='secondary' outline >\n    {exchange}\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant='textSubtle' outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant='binance' outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag, ExchangeTag }\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      const txHash = await stake(masterChefContract, pid, amount, account, decimals)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(0.1)\nexport const BLOCKS_PER_YEAR = new BigNumber(15017142) // 15017142 ?\nexport const BSC_BLOCK_TIME = 2\n\nexport const CAKE_POOL_PID = 2\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account, decimals)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n"],"sourceRoot":""}