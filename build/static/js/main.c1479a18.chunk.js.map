{"version":3,"sources":["state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/hooks.ts","utils/getRpcUrl.ts","contexts/RefreshContext.tsx","contexts/ThemeContext.tsx","state/actions.ts","hooks/useRefresh.ts","contexts/Localisation/translationsContext.ts","components/layout/Container.tsx","components/layout/Page.tsx","contexts/BlockContext.tsx","config/constants/types.ts","config/constants/contracts.ts","hooks/useTheme.ts","utils/multicall.ts","utils/addressHelpers.ts","config/constants/pools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","config/constants/farms.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","utils/web3.ts"],"names":["fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","BigNumber","div","pow","tokenPriceVsQuote","tokenSymbol","QuoteToken","BUSD","quoteTokenSymbol","lpTotalInQuoteToken","times","lpStakedTotal","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","pid","info","totalAllocPoint","fKuzoPerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","ZERO","useFetchPublicData","useDispatch","slowRefresh","useRefresh","useEffect","useFarms","useSelector","useFarmFromPid","useFarmUser","usePools","fastRefresh","fetchPoolsUserDataAsync","pools","usePriceBnbBusd","usePriceCakeBusd","useTotalValue","cakePrice","bnbPrice","usePriceWethBusd","value","i","length","val","BNB","CAKE","plus","nodes","process","getNodeUrl","randomIndex","random","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","interval","setInterval","prev","clearInterval","Provider","CACHE_KEY","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","localStorage","getItem","JSON","parse","setIsDark","prevState","setItem","stringify","theme","dark","light","useContext","defaultTranslationState","translations","setTranslations","TranslationsContext","Container","styled","mediaQueries","sm","Page","lg","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","web3","getWeb3","eth","getBlockNumber","blockNumber","current","PoolCategory","cake","masterChef","sousMasterChef","weth","lottery","lotteryNFT","mulltiCall","usdc","busd","dai","usdt","wbtc","wmatic","wbnb","matic","useTheme","StyledThemeCopntext","abi","multi","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","res","decodeFunctionResult","getCakeAddress","addresses","chainId","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","nonBnbPools","poolsConfig","filter","p","stakingTokenName","bnbPools","nonMasterPools","sousId","masterChefContract","masterChefABI","fetchPoolsAllowance","stakingTokenAddress","contractAddress","allowances","reduce","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","sousChefABI","userInfo","stakedBalances","amount","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingKuzo","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","risk","lpSymbol","contracts","WMATIC","GlobalStyle","createGlobalStyle","colors","background","EN","code","language","allLanguages","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","storedLangCode","storedLang","getStoredLang","fetch","then","r","json","translationApiResponse","catch","e","console","error","langObject","config","label","icon","href","items","Menu","props","useWallet","connect","reset","cakePriceUsd","login","logout","currentLang","langs","setLang","links","priceLink","Wrapper","PageLoader","Home","lazy","Farms","Pools","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","Global","fallback","path","exact","tokenMode","component","memo","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","getRpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","RPC_URL","httpProvider","Web3","providers","HttpProvider","timeout","getContract","contractOptions"],"mappings":"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","file":"static/js/main.c1479a18.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { QuoteToken } from '../../config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBalanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals\n      ] = await multicall(erc20, calls)\n\n\n      let tokenAmount;\n      let lpTotalInQuoteToken;\n      let lpStakedTotal;\n      let tokenPriceVsQuote;\n      if(farmConfig.isTokenOnly){\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals));\n\n        if(farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD){\n          tokenPriceVsQuote = new BigNumber(1);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBalanceLP).div(new BigNumber(10).pow(quoteTokenDecimals)).div(new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)));\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote);\n        lpStakedTotal = tokenAmount;\n      }\n      else {\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBalanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBalanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if(tokenAmount.comparedTo(0) > 0){\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\n        } else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBalanceLP).div(new BigNumber(tokenBalanceLP)).times(new BigNumber(10).pow(tokenDecimals - quoteTokenDecimals));\n        }\n        lpStakedTotal = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(quoteTokenDecimals))        \n      }\n\n\n      const [info, totalAllocPoint, fKuzoPerBlock] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'fKuzoPerBlock',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        fKuzoPerBlock: new BigNumber(fKuzoPerBlock).toNumber(),\n        lpStakedTotal: lpStakedTotal.toJSON(),\n        tokenDecimals: new BigNumber(tokenDecimals).toNumber(),\n        quoteTokenDecimals: new BigNumber(quoteTokenDecimals).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingKuzo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\nimport { QuoteToken } from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    // dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n    tokenDecimals: farm ? farm.tokenDecimals : null,\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 0 // BUSD-BNB LP usdc ftm\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 8 // BERRY-BUSD LP usdc/kuzo\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceWethBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 0; // WETH-BUSD LP\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\n\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const wethPrice = usePriceWethBusd();\n\n  const bnbPrice = cakePrice.div(usePriceBnbBusd())\n  let value = new BigNumber(0)\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = cakePrice.times(farm.lpTotalInQuoteToken)\n      } else {\n        val = farm.lpTotalInQuoteToken\n      }\n      value = value.plus(val)\n    }\n  }\n  return value\n}\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n  'KUZO' = 'KUZO',\n  'WMATIC' = 'WMATIC'\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  250?: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  otherExchange?: string\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n  tokenDecimals?: number\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","export default {\n  cake: {\n    250: '0x09F956A0C414B670bB5FEA3D6734A10cEBd4f7D6',\n  },\n  masterChef: {\n    250: '0x08da44a3a907Ae0D53369Ca3a05454887B594aB6',\n  },\n  sousMasterChef: {\n    250: '0x563373d51Eb8e9F9074216763a39F3aD79597edd',\n  },\n  weth: {\n    250: '0x74b23882a30290451A17c44f4F05243b6b58C76d',\n  },\n  lottery: {\n    250: '',\n  },\n  lotteryNFT: {\n    250: '',\n  },\n  mulltiCall: {\n    250: '0xb828C456600857abd4ed6C32FAcc607bD0464F4F',\n  },\n  usdc: {\n    250: '0x04068DA6C83AFCFA0e13ba15A6696662335D5B75',\n  },\n  busd: {\n    250: '0x04068DA6C83AFCFA0e13ba15A6696662335D5B75',\n  },\n  dai: {\n    250: '0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E',\n  },\n  usdt: {\n    250: '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9', // USDT\n  },\n  wbtc: {\n    250: '0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6', // wbtc\n  },\n  wmatic: {\n    250: '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83',\n  },\n  wbnb: {\n    250: '0x82af49447d8a07e3bd95bd0d56f35241523fbab1',\n  },\n  matic: {\n    250: '0x0000000000000000000000000000000000001010',\n  },\n}\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.weth[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  // {\n  //  sousId: 1,\n  //  tokenName: 'DAI',\n  //  stakingTokenName: QuoteToken.CRAB,\n  //  stakingTokenAddress: '0x3d918123695a5a643aC9c96DEc301911D47AA089',\n  //  contractAddress: {\n  //   250: '0x462C91e1E5a596Ef74bABF46F68061A1836f020d'\n  //  },\n  //  poolCategory: PoolCategory.COMMUNITY,\n  //  projectLink: 'https://pancakeswap.finance/',\n  //  harvest: true,\n  //  tokenPerBlock: '0.0092',\n  //  sortOrder: 1,\n  //  isFinished: true,\n  //  tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 2,\n  //   tokenName: 'WBTC',\n  //   stakingTokenName: QuoteToken['IRID-CRAB'],\n  //   stakingTokenAddress: '0xD592bfB50ad10088A428F1a4e74213090fC4A6dC',\n  //   contractAddress: {\n  //     250: '0x563373d51Eb8e9F9074216763a39F3aD79597edd'\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   projectLink: 'https://platinumfinance.app/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.00000034',\n  //   sortOrder: 1,\n  //   isFinished: false, \n  //   tokenDecimals: 8,\n  // }\n  // {\n  //   sousId: 1,\n  //   tokenName: 'TWT',\n  //   stakingTokenName: QuoteToken.SYRUP,\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://trustwallet.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n]\n\nexport default pools\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingKuzo('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    risk: 5,\n    lpSymbol: 'KUZO-WFTM LP',\n  \n    lpAddresses: {\n      97: '',\n      250: '0xb70244d1a6b7BDC49c95317037155a28B5485e00',\n    },\n    tokenSymbol: 'KUZO',\n    tokenAddresses: {\n      97: '',\n      250: '0x09F956A0C414B670bB5FEA3D6734A10cEBd4f7D6',\n    },\n    quoteTokenSymbol: QuoteToken.CAKE,\n    quoteTokenAdresses: contracts.cake,\n    tokenDecimals: 18,\n  },\n\n  \n  {\n    pid: 2,\n    risk: 5,\n    lpSymbol: 'BOO-WFTM LP',\n  \n    lpAddresses: {\n      97: '',\n      250: '0xEc7178F4C41f346b2721907F5cF7628E388A7a58',\n    },\n    tokenSymbol: 'BOO',\n    tokenAddresses: {\n      97: '',\n      250: '0x841FAD6EAe12c286d1Fd18d1d525DFfA75C7EFFE',\n    },\n    quoteTokenSymbol: QuoteToken.WMATIC,\n    quoteTokenAdresses: contracts.wmatic,\n    tokenDecimals: 18,\n  },\n \n  \n \n  \n  {\n    pid: 3,\n    risk: 5,\n    lpSymbol: 'WFTM-WETH LP',\n  \n    lpAddresses: {\n      97: '',\n      250: '0xf0702249F4D3A25cD3DED7859a165693685Ab577',\n    },\n    tokenSymbol: 'WETH',\n    tokenAddresses: {\n      97: '',\n      250: '0x74b23882a30290451A17c44f4F05243b6b58C76d',\n    },\n    quoteTokenSymbol: QuoteToken.WMATIC,\n    quoteTokenAdresses: contracts.wmatic,\n    tokenDecimals: 18,\n  },\n  {\n    pid: 4,\n    risk: 5,\n    lpSymbol: 'WFTM-USDC LP',\n  \n    lpAddresses: {\n      97: '',\n      250: '0x2b4C76d0dc16BE1C31D4C1DC53bF9B45987Fc75c',\n    },\n    tokenSymbol: 'WFTM',\n    tokenAddresses: {\n      97: '',\n      250: '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    tokenDecimals: 18,\n  },\n  {\n    pid: 5,\n    risk: 5,\n    lpSymbol: 'WFTM-SCREAM LP',\n  \n    lpAddresses: {\n      97: '',\n      250: '0x30872e4fc4edbFD7a352bFC2463eb4fAe9C09086',\n    },\n    tokenSymbol: 'SCREAM',\n    tokenAddresses: {\n      97: '',\n      250: '0xe0654C8e6fd4D733349ac7E09f6f23DA256bF475',\n    },\n    quoteTokenSymbol: QuoteToken.WMATIC,\n    quoteTokenAdresses: contracts.wmatic,\n    tokenDecimals: 18,\n  },\n  {\n    pid: 6,\n    risk: 5,\n    lpSymbol: 'WFTM-WBTC LP',\n  \n    lpAddresses: {\n      97: '',\n      250: '0xfdb9ab8b9513ad9e419cf19530fee49d412c3ee3',\n    },\n    tokenSymbol: 'WBTC',\n    tokenAddresses: {\n      97: '',\n      250: '0x321162Cd933E2Be498Cd2267a90534A804051b11',\n    },\n    quoteTokenSymbol: QuoteToken.WMATIC,\n    quoteTokenAdresses: contracts.wmatic,\n    tokenDecimals: 18,\n  },\n  {\n    pid: 7,\n    risk: 5,\n    lpSymbol: 'WFTM-DAI LP',\n  \n    lpAddresses: {\n      97: '',\n      250: '0xe120ffbda0d14f3bb6d6053e90e63c572a66a428',\n    },\n    tokenSymbol: 'DAI',\n    tokenAddresses: {\n      97: '',\n      250: '0x8d11ec38a3eb5e956b052f67da8bdc9bef8abf3e',\n    },\n    quoteTokenSymbol: QuoteToken.WMATIC,\n    quoteTokenAdresses: contracts.wmatic,\n    tokenDecimals: 18,\n  },\n  // {\n  //   pid: 2,\n  //   risk: 5,\n  //   lpSymbol: 'WETH-USDC',\n  //   lpAddresses: {\n  //     250: '0x905dfCD5649217c42684f23958568e533C711Aa3',\n  //   },\n  //   tokenSymbol: 'WETH',\n  //   tokenAddresses: {\n  //     250: '0x82af49447d8a07e3bd95bd0d56f35241523fbab1',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  {\n    pid: 8,\n    risk: 5,\n    isTokenOnly: true,\n    lpSymbol: 'KUZO',\n  \n    lpAddresses: {\n      97: '',\n      250: '0xb70244d1a6b7BDC49c95317037155a28B5485e00', // RECYCLE-BUSD LP\n    },\n    tokenSymbol: 'KUZO',\n    tokenAddresses: {\n      97: '',\n      250: '0x09F956A0C414B670bB5FEA3D6734A10cEBd4f7D6',\n    },\n    quoteTokenSymbol: QuoteToken.WMATIC,\n    quoteTokenAdresses: contracts.wmatic,\n    tokenDecimals: 18,\n  },\n  \n  {\n    pid: 9,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WFTM',\n  \n    lpAddresses: {\n      250: '0x2b4c76d0dc16be1c31d4c1dc53bf9b45987fc75c',\n    },\n    tokenSymbol: 'WFTM',\n    tokenAddresses: {\n      250: '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    tokenDecimals: 18,\n  },\n  {\n    pid: 10,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'USDC',\n  \n    lpAddresses: {\n      250: '0x2b4c76d0dc16be1c31d4c1dc53bf9b45987fc75c',\n    },\n    tokenSymbol: 'USDC',\n    tokenAddresses: {\n      250: '0x04068DA6C83AFCFA0e13ba15A6696662335D5B75',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    tokenDecimals: 6,\n  },\n  {\n    pid: 11,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WETH',\n  \n    lpAddresses: {\n      250: '0xa572bdf049382f1f98f9a430788dadd51a303969',\n    },\n    tokenSymbol: 'WETH',\n    tokenAddresses: {\n      250: '0x74b23882a30290451A17c44f4F05243b6b58C76d',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    tokenDecimals: 18,\n  },\n  {\n    pid: 12,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WBTC',\n  \n    lpAddresses: {\n      250: '0xd92206379bd8203ac38225af006bb96bf1f12412',\n    },\n    tokenSymbol: 'WBTC',\n    tokenAddresses: {\n      250: '0x321162Cd933E2Be498Cd2267a90534A804051b11',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    tokenDecimals: 18,\n  },\n  {\n    pid: 13,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'DAI',\n  \n    lpAddresses: {\n      250: '0x484237bc35ca671302d19694c66d617142fbc235',\n    },\n    tokenSymbol: 'DAI',\n    tokenAddresses: {\n      250: '0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    tokenDecimals: 18,\n  },\n  {\n    pid: 14,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'FUSDT',\n  \n    lpAddresses: {\n      250: '0xfdef392adc84607135c24ca45de5452d77aa10de',\n    },\n    tokenSymbol: 'FUSDT',\n    tokenAddresses: {\n      250: '0x049d68029688eAbF473097a2fC38ef61633A3C7A',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    tokenDecimals: 6,\n  },\n  {\n    pid: 15,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WBNB',\n  \n    lpAddresses: {\n      250: '0x30409563050c718fd083b646d8a07420e789cdb4',\n    },\n    tokenSymbol: 'WBNB',\n    tokenAddresses: {\n      250: '0xD67de0e0a0Fd7b15dC8348Bb9BE742F3c5850454',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    tokenDecimals: 8,\n  },\n  {\n    pid: 16,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'BOO',\n  \n    lpAddresses: {\n      250: '0xf8cb2980120469d79958151daa45eb937c6e1ed6',\n    },\n    tokenSymbol: 'BOO',\n    tokenAddresses: {\n      250: '0x841FAD6EAe12c286d1Fd18d1d525DFfA75C7EFFE',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    tokenDecimals: 18,\n  },\n  // {\n  //   pid: 5,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'USDC',\n  //   lpAddresses: {\n  //     250: '0x971413902FFfa517456279aaf9f646eE4B11A8D9',\n  //   },\n  //   tokenSymbol: 'USDC',\n  //   tokenAddresses: {\n  //     250: '0xff970a61a04b1ca14834a43f5de4533ebddb5cc8',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   tokenDecimals: 6,\n  // },\n  // {\n  //   pid: 6,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'USDT',\n  //   lpAddresses: {\n  //     250: '0xcb0e5bfa72bbb4d16ab5aa0c60601c438f04b4ad',\n  //   },\n  //   tokenSymbol: 'USDT',\n  //   tokenAddresses: {\n  //     250: '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   tokenDecimals: 6,\n  // },\n  // {\n  //   pid: 7,\n  //   risk: 3,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'WBTC',\n  //   lpAddresses: {\n  //     250: '0xff13348778cc2ced614f6f73a8e488ac11292f25', //  WBTC/eth\n  //   },\n  //   tokenSymbol: 'WBTC',\n  //   tokenAddresses: {\n  //     250: '0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   tokenDecimals: 8,\n  // },\n]\n\nexport default farms\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Helvetica Neue', monospace;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\tbackground-image: url('images/egg/background.jpg');\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  // ZHCN,\n  // ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      // console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then(r=>r.json())\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error(\"ERROR\");\n          console.error(e);\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\n\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://spookyswap.finance/swap?outputCurrency=0x09F956A0C414B670bB5FEA3D6734A10cEBd4f7D6',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://spookyswap.finance/pool',\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: 'Chart',\n    icon: 'InfoIcon',\n    href: 'https://kek.tools/t/0x09F956A0C414B670bB5FEA3D6734A10cEBd4f7D6',\n  },\n  {\n    label: 'Buy Kuzo',\n    icon: 'IfoIcon',\n    href: 'https://spookyswap.finance/swap?outputCurrency=0x09F956A0C414B670bB5FEA3D6734A10cEBd4f7D6',\n  },\n  // {\n  //   label: 'Pools',\n  //   icon: 'PoolIcon',\n  //   href: '/pools',\n  // },\n  // {\n  //   label: 'Lottery',\n  //   icon: 'TicketIcon',\n  //   href: '/lottery',\n  // },\n  // {\n  //   label: 'NFT',\n  //   icon: 'NftIcon',\n  //   href: '/nft',\n  // },\n  {\n    label: 'Documentation',\n    icon: 'MoreIcon',\n    href: 'https://kuzo-defi.gitbook.io/kuzo-defi/',\n  },\n  {\n    label: 'Metamask Bridge',\n    icon: 'NftIcon',\n    href: 'https://kuzo-defi.gitbook.io/kuzo-defi/bridge/metamask',\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      priceLink=\"https://kuzo-defi.gitbook.io/kuzo-defi/\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst CommunityPool = lazy(() => import('./views/Profit'))\n// const Lottery = lazy(() => import('./views/Lottery'))\nconst Pools = lazy(() => import('./views/Pools'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Farms tokenMode/>\n            </Route>\n\t\t\t<Route path=\"/pbank\">\n              <Pools />\n             </Route>\n            {/* <Route path=\"/pools\"> */}\n            {/*  <Pools /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/lottery\"> */}\n            {/*  <Lottery /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/ifo\"> */}\n            {/*  <Ifos /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/nft\"> */}\n            {/*  <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/syrup\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n      {/* <NftGlobalNotification /> */}\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID)\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n"],"sourceRoot":""}