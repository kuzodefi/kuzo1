{"version":3,"sources":["views/BG.tsx","views/Profit/components/DepositModal.tsx","views/Profit/components/WithdrawModal.tsx","views/Profit/components/CompoundModal.tsx","views/Profit/components/CardTitle.tsx","views/Profit/components/Card.tsx","views/Profit/components/OldSyrupTitle.tsx","views/Profit/components/HarvestButton.tsx","views/Profit/components/CardFooter.tsx","views/Profit/components/PoolCard.tsx","views/Profit/components/Divider.tsx","views/Profit/Profit.tsx","utils/translateTextHelpers.ts","hooks/useI18n.ts","utils/formatBalance.ts","hooks/useWeb3.ts","hooks/useContract.ts","utils/callHelpers.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/Balance.tsx","components/Tags.tsx","hooks/useStake.ts","hooks/useHarvest.ts","components/UnlockButton.tsx","config/index.ts","components/layout/Flex.tsx","hooks/useApprove.ts","hooks/useUnstake.ts","hooks/useBlock.ts","config/constants/index.ts","components/Label/Label.tsx"],"names":["BG","props","enableConsent","opacity","isDesktopOrLaptop","useMediaQuery","query","params","fullScreen","enable","particles","lineLinked","triangles","orbit","life","count","duration","value","shape","type","links","frequency","consent","distance","color","width","blink","warp","min","max","random","number","size","move","speed","collisions","outMode","interactivity","events","onhover","mode","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","TranslateString","useI18n","fullBalance","useMemo","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","handleSelectMax","title","TokenInput","onSelectMax","onChange","symbol","ModalActions","variant","onClick","disabled","a","WithdrawModal","CompoundModal","earnings","BalanceRow","Balance","Number","id","styled","div","CardTitle","isFinished","theme","colors","Card","card","background","boxShadow","radii","isActive","Title","ActionLink","OldSyrupTitle","hasBalance","href","target","StyledButton","button","fontSize","padding","undefined","StyledLink","Link","spacing","StyledExternalLink","Button","buttonSize","buttonPadding","children","text","to","useContext","ThemeContext","buttonColor","ButtonChild","tags","PoolCategory","BINANCE","BinanceTag","CORE","CoreTag","COMMUNITY","CommunityTag","StyledFooter","isDark","StyledDetailsButton","primary","Details","Row","FlexFull","Label","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","style","marginBottom","role","isDisabled","decimals","rel","React","memo","RainbowLight","keyframes","StyledCardAccent","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","sousId","image","stakingTokenName","stakingTokenAddress","harvest","tokenDecimals","apy","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","useERC20","account","useWallet","block","useBlock","onApprove","useSousApprove","onStake","useSousStake","onUnstake","useSousUnstake","onReward","useSousHarvest","requestedApproval","setRequestedApproval","allowance","BigNumber","stakingTokenBalance","stakedBalance","pendingReward","Math","isOldSyrup","QuoteToken","SYRUP","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","pow","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","console","error","display","alignItems","flex","src","height","alt","HarvestButton","getBalanceNumber","justifyContent","UnlockButton","eq","Farm","path","useRouteMatch","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","map","rewardTokenFarm","find","f","tokenSymbol","stakingTokenFarm","s","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","BUSD","priceToBnb","quoteTokenSymbol","times","tokenPerBlock","BLOCKS_PER_YEAR","totalStakingTokenInPool","partition","finishedPools","openPools","Page","Divider","Flex","exact","orderBy","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","translation","data","stringId","translatedString","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","TranslationsContext","length","balance","displayBalance","dividedBy","toFixed","getCorrectedNumber","digits","toExponential","toLocaleString","maximumFractionDigits","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","refEth","useRef","web3","setweb3","useEffect","current","useContract","abi","address","contractOptions","eth","Contract","contract","setContract","erc20","useCake","getCakeAddress","useLottery","lottery","getLotteryAddress","useMasterchef","masterChef","getMasterChefAddress","useSousChef","config","poolsConfig","rawAbi","sousChefBnb","sousChef","contractAddress","process","approve","lpContract","masterChefContract","methods","options","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","soushHarvest","soushHarvestBnb","StyledSpacer","Spacer","StyledModalActions","primaryDark","StyledModalAction","l","Children","toArray","child","i","StyledInputWrapper","input","default","StyledInput","Input","endAdornment","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","depositFeeBP","StyledText","Text","textDisabled","unit","previousValue","bold","start","end","separator","defaultProps","NoFeeTag","outline","startIcon","ExchangeTag","exchange","isUsingBnb","dispatch","useDispatch","handleStake","updateUserStakedBalance","updateUserBalance","useStake","txHash","fetchFarmUserDataAsync","info","useHarvest","farmPid","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","handleHarvest","updateUserPendingReward","connect","reset","onPresentConnectModal","useWalletModal","EXPONENTIAL_AT","DECIMAL_PLACES","FlexLayout","useApprove","updateUserAllowance","SYRUPIDS","useUnstake","BlockContext","farmsConfig","filter","farm","isCommunity","StyledLabel"],"mappings":"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","file":"static/js/9.7eafe782.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Particles from 'react-particles-js'\nimport { useMediaQuery } from 'react-responsive'\n\ninterface BackgroundProps {\n    enableConsent?:boolean\n}\n\nconst BG: React.FC<BackgroundProps> = (props) => {\n\tconst {enableConsent} = props;\n\tconst opacity = enableConsent? .1 : .3;\n  \n\tconst isDesktopOrLaptop = useMediaQuery({\n\t  query: '(min-device-width: 1224px)'\n\t})\n  \n\treturn (\n\t  <>\n\t  {isDesktopOrLaptop?\n\t  <Particles\n\t\tparams={{\n\t\t  fullScreen: {\n\t\t\tenable: true,\n\t\t  },\n\t\t  particles: {\n\t\t\tlineLinked:{\n\t\t\t  enable:true,\n\t\t\t  triangles:{\n\t\t\t\tenable:false\n\t\t\t  }\n  \n\t\t\t},\n\t\t\torbit:{\n\t\t\t  enable:true,\n\t\t\t   opacity:0\n  \n\t\t\t},\n\t\t\tlife:{\n\t\t\t  count:30,\n\t\t\t  duration:{\n\t\t\t\tvalue:500000\n\t\t\t  }\n\t\t\t},\n\t\t\tshape: {\n\t\t\t  type: \"none\",\n\t\t\t},\n\t\t\tlinks: {\n\t\t\t  frequency:10000,\n\t\t\t  consent:enableConsent,\n\t\t\t  enable: true,\n\t\t\t  distance:340,\n\t\t\t  color:'random',\n\t\t\t  width:3,\n\t\t\t  opacity,\n\t\t\t  blink:false,\n\t\t\t  warp:true,\n  \n\t\t\t  triangles:{\n\t\t\t\tenable:false,\n\t\t\t\tfrequency:100000,\n\t\t\t\topacity:0.1,\n\t\t\t  }\n\t\t\t},\n\t\t\tcolor: {\n\t\t\t  value: [\n\t\t\t\t\"#ac30ff\",\n\t\t\t\t\"#7943ff\",\n\t\t\t\t\"#87bbde\",\n\t\t\t\t\"#fa7db1\",\n\t\t\t\t\"#f57179\",\n\t\t\t\t\"#ff8534\",\n\t\t\t\t\"#3f48f2\",\n  \n\t\t\t  ],\n\t\t\t},\n\t\t\topacity:{\n\t\t\t  value:{\n\t\t\t\tmin:opacity/10,\n\t\t\t\tmax:opacity/10+.01\n\t\t\t  },\n\t\t\t  random:true\n\t\t\t},\n\t\t\tnumber: {\n\t\t\t  value: 30,\n\t\t\t},\n\t\t\tsize: {\n\t\t\t  value: {\n\t\t\t\tmin:3,\n\t\t\t\tmax:16\n\t\t\t  },\n\t\t\t},\n\t\t\tmove: {\n\t\t\t  enable: true,\n\t\t\t  speed: {min:.1,max:.4},\n\t\t\t  collisions:true,\n\t\t\t  outMode: \"bounce\",\n\t\t\t},\n\t\t  },\n\t\t  interactivity: {\n\t\t\tevents: {\n\t\t\t  onhover: {\n\t\t\t\tenable: true,\n\t\t\t\tmode: 'repulse',\n\t\t\t  },\n  \n\t\t\t},\n\t\t  },\n\t\t}}\n\t\t/>:null\n\t   }\n\t\t</>\n\t)\n  }\n \n  export default BG","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} KUZO Earned`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${({ theme }) => theme.card.background};\n  border: ${({ theme }) => theme.card.boxShadow};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: ${({ theme }) => theme.radii.card};\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\nexport default Card\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                {' '}\n                </span>\n                {TranslateString(999, 'Total WBTC to be distributed in $')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={4000} decimals={0} />\n          </Row>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                {' '}\n                </span>\n                {TranslateString(999, 'WBTC/block')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={0.00000034} decimals={8}/>\n          </Row>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                {' '}\n                </span>\n                {TranslateString(999, 'Distributing until block #')}<a href=\"https://polygonscan.com/block/countdown/17659200\" rel=\"noreferrer\" target=\"_blank\">17659200</a>\n              </Label>\n            </FlexFull>\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(411, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image, Flex, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\nbackground: linear-gradient(\n  45deg,\n  rgba(175,251,255,1) 0%, rgba(250,250,250,1) 16%, rgba(217,253,255,1) 34%, rgba(183,243,255,1) 51%, rgba(208,251,255,1) 69%, rgba(240,243,243,1) 82%, rgba(181,241,255,1) 100%);\nbackground-size: 300% 300%;\nanimation: ${RainbowLight} 6s linear infinite;\nborder-radius: 16px;\nfilter: blur(6px);\nposition: absolute;\ntop: -2px;\nright: -2px;\nbottom: -2px;\nleft: -2px;\nz-index: -1;\n`\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber,\n  depositFee?: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {pool.stakingTokenName === 'KUZO' && <StyledCardAccent />}\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {sousId === 9 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={`${tokenName} Earned`} />\n        <Flex justifyContent=\"space-between\" />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove}>\n                  Approve\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  Unstake tokens\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n            <div style={{ flex: 1 }}>\n              {TranslateString(384, 'Your Stake')}:\n              <Image src={`/images/tokens/${stakingTokenName}.png`} width={20} height={20} alt=\"KUZO\" />\n              \n            </div>\n            \n            </span>\n            \n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import styled from 'styled-components'\n\nexport default styled.div`\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools, usePoolFromPid } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport BG from '../BG'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n    \n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <>\n    <Page>\n\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </>\n          \n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n    <BG/>\n    </>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport const getCorrectedNumber = (balance: number) => {\n  const digits = balance > 0.001 ? 4 : 9\n  \n  return  balance < 1e-5 && balance > 0 \n    ? balance.toExponential(2).split('e')[0].toLocaleString()\n    : balance.toLocaleString(undefined, {maximumFractionDigits:  balance > 1 ? 2 : (digits)})\n}","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account, decimals = 18) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account, decimals = 18) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {\n        depositFeeBP > 0 ?\n          <StyledMaxText>\n            {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\n          </StyledMaxText>\n          :\n          null\n      }\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant='secondary' outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst ExchangeTag = ({exchange}) => (\n  <Tag variant='secondary' outline >\n    {exchange}\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant='textSubtle' outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant='binance' outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag, ExchangeTag }\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      const txHash = await stake(masterChefContract, pid, amount, account, decimals)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(0.1)\nexport const BLOCKS_PER_YEAR = new BigNumber(15017142) // 15017142 ?\nexport const BSC_BLOCK_TIME = 2\n\nexport const CAKE_POOL_PID = 2\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account, decimals)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n"],"sourceRoot":""}